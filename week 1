Problem 1
Assume s is a string of lower case characters.
Write a program that counts up the number of vowels contained in the string s. Valid vowels are: 'a', 'e', 'i', 'o', and 'u'. For example, if s = 'azcbobobegghakl', your program should print:
Number of vowels: 5

numVowels = 0
for char in s:
    if char == 'a' or char == 'e' or char == 'i' \
       or char == 'o' or char == 'u':
        numVowels += 1
print(numVowels)


Problem 2
Assume s is a string of lower case characters.
Write a program that prints the number of times the string 'bob' occurs in s. For example, if s = 'azcbobobegghakl', then your program should print
Number of times bob occurs is: 2

s=s+' '
bobtimes=0
if len(s)<3:
    print('Number of times bob occurs is: 0')
for i in range(len(s)-2):
    if s[i:i+3]=='bob':
        bobtimes+=1
print('Number of times bob occurs is: ',bobtimes)

Problem 3
Assume s is a string of lower case characters.
Write a program that prints the longest substring of s in which the letters occur in alphabetical order. For example, if s = 'azcbobobegghakl', then your program should print
Longest substring in alphabetical order is: beggh
In the case of ties, print the first substring. For example, if s = 'abcbcd', then your program should print
Longest substring in alphabetical order is: abc

currentchar=s[0]
nextchar=s[1]
currentseq=''
maxlen=1
maxseq=''
for ch in s[1:]:
    if ord(ch)>=ord(currentchar):
        
        if len(currentseq)==0:
            currentseq=currentchar+ch
        else:
            currentseq=currentseq+ch
        currentchar=ch
        if len(currentseq)>maxlen:
            maxlen=len(currentseq)
            maxseq=currentseq
    else:
        currentseq=''
        currentchar=ch
if maxseq=='':
    print('Longest substring in alphabetical order is:',s[0])
else:
    print('Longest substring in alphabetical order is:',maxseq)
